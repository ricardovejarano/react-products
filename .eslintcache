[{"/mnt/c/dev/node/productsReact/react-products/src/reportWebVitals.ts":"1","/mnt/c/dev/node/productsReact/react-products/src/App.tsx":"2","/mnt/c/dev/node/productsReact/react-products/src/index.tsx":"3","/mnt/c/dev/node/productsReact/react-products/src/pages/login/login.page.tsx":"4","/mnt/c/dev/node/productsReact/react-products/src/redux/actions/products.actions.ts":"5","/mnt/c/dev/node/productsReact/react-products/src/utils/constants.ts":"6","/mnt/c/dev/node/productsReact/react-products/src/pages/home/home.tsx":"7","/mnt/c/dev/node/productsReact/react-products/src/components/DetailProduct/detail-product.component.tsx":"8","/mnt/c/dev/node/productsReact/react-products/src/components/CardCategory/card-category.component.tsx":"9","/mnt/c/dev/node/productsReact/react-products/src/components/ModalProduct/modal-product.component.tsx":"10"},{"size":425,"mtime":1606355602161,"results":"11","hashOfConfig":"12"},{"size":556,"mtime":1606356150345,"results":"13","hashOfConfig":"12"},{"size":520,"mtime":1606357072362,"results":"14","hashOfConfig":"12"},{"size":2750,"mtime":1606523580693,"results":"15","hashOfConfig":"12"},{"size":927,"mtime":1606525076158,"results":"16","hashOfConfig":"12"},{"size":237,"mtime":1606522147110,"results":"17","hashOfConfig":"12"},{"size":4107,"mtime":1606534510478,"results":"18","hashOfConfig":"12"},{"size":1553,"mtime":1606565082828,"results":"19","hashOfConfig":"12"},{"size":1410,"mtime":1606527215676,"results":"20","hashOfConfig":"12"},{"size":3317,"mtime":1606566028403,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14abwkd",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/dev/node/productsReact/react-products/src/reportWebVitals.ts",[],"/mnt/c/dev/node/productsReact/react-products/src/App.tsx",[],"/mnt/c/dev/node/productsReact/react-products/src/index.tsx",[],"/mnt/c/dev/node/productsReact/react-products/src/pages/login/login.page.tsx",[],"/mnt/c/dev/node/productsReact/react-products/src/redux/actions/products.actions.ts",["43"],"/mnt/c/dev/node/productsReact/react-products/src/utils/constants.ts",[],"/mnt/c/dev/node/productsReact/react-products/src/pages/home/home.tsx",["44","45"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardCategory, { ICategory, IProductResponse } from '../../components/CardCategory/card-category.component';\r\nimport { getProducts } from '../../redux/actions/products.actions';\r\nimport { Container, Row, Col, Navbar, NavbarText, InputGroup, InputGroupAddon, Input, InputGroupText, Button } from 'reactstrap';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport Product from '../../components/Product/product.component';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Home(props: any) {\r\n    const userStart: any = {};\r\n    const initialProductsValue: IProductResponse[] = [];\r\n    const [user, setUser] = useState(userStart);\r\n    const [search, setSearch] = useState('');\r\n    const [searchedProducts, setSearchedProducts] = useState(initialProductsValue);\r\n\r\n    const history = useHistory();\r\n\r\n    const { dispatch,\r\n        categories: {\r\n            categories\r\n        }\r\n    } = props;\r\n\r\n    const logout = (_: any) => {\r\n        sessionStorage.clear();\r\n        history.goBack();\r\n    }\r\n\r\n    const userInfo = JSON.parse(sessionStorage.getItem('userInfo') || '');\r\n\r\n    useEffect(() => {\r\n        if (sessionStorage.getItem('loggedIn') !== 'true') history.push('/');\r\n        setUser(userInfo);\r\n        categories.length === 0 && dispatch(getProducts(userInfo._id));\r\n    }, [categories]);\r\n\r\n    const handleSearchInput = (e: any) => {\r\n        setSearch(e.target.value);\r\n        filterProducts(e.target.value);\r\n    }\r\n\r\n    const filterProducts = (query: string) => {\r\n        let allProducts: any[] = [];\r\n        categories.forEach((category: ICategory) => {\r\n            if (category.products?.length !== 0) {\r\n                allProducts.push(category.products);\r\n            };\r\n        });\r\n        const products: IProductResponse[] = allProducts.flat()\r\n        const filteredProducts: IProductResponse[] = products.filter((product: IProductResponse) => {\r\n            return product.name.toLowerCase().indexOf(query.toLowerCase()) !== -1;\r\n        });\r\n\r\n        setSearchedProducts(filteredProducts);\r\n        if (query === '') setSearchedProducts([]);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Navbar color=\"light\" light expand=\"md\">\r\n                <Button onClick={logout}>Logount</Button>\r\n                <h3>Hello {user.name}</h3>\r\n            </Navbar>\r\n            <InputGroup>\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText><FaSearch /></InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input\r\n                    type=\"text\"\r\n                    value={search}\r\n                    onChange={handleSearchInput}\r\n                    placeholder=\"search\" />\r\n            </InputGroup>\r\n\r\n            {/* Result Search */}\r\n            <Container>\r\n            </Container>\r\n            {\r\n                searchedProducts.map((product: IProductResponse, index: number) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <Product product={product} />\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {/* Main Search */}\r\n            {console.log(searchedProducts)}\r\n            { searchedProducts.length === 0 ?\r\n                <Container >\r\n                    <Row>\r\n                        {\r\n                            categories.map((val: any, index: any) => {\r\n                                return (\r\n                                    <Col key={index} xs=\"6\">\r\n                                        <CardCategory dispatch={dispatch} category={val} />\r\n                                    </Col>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Row>\r\n                </Container> : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        categories: state.categories,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","/mnt/c/dev/node/productsReact/react-products/src/components/DetailProduct/detail-product.component.tsx",["46","47","48","49","50"],"/mnt/c/dev/node/productsReact/react-products/src/components/CardCategory/card-category.component.tsx",[],"/mnt/c/dev/node/productsReact/react-products/src/components/ModalProduct/modal-product.component.tsx",["51","52","53","54"],{"ruleId":"55","severity":1,"message":"56","line":5,"column":10,"nodeType":"57","messageId":"58","endLine":5,"endColumn":18},{"ruleId":"55","severity":1,"message":"59","line":5,"column":39,"nodeType":"57","messageId":"58","endLine":5,"endColumn":49},{"ruleId":"60","severity":1,"message":"61","line":36,"column":8,"nodeType":"62","endLine":36,"endColumn":20,"suggestions":"63"},{"ruleId":"55","severity":1,"message":"64","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":16},{"ruleId":"55","severity":1,"message":"65","line":2,"column":18,"nodeType":"57","messageId":"58","endLine":2,"endColumn":23},{"ruleId":"55","severity":1,"message":"66","line":2,"column":25,"nodeType":"57","messageId":"58","endLine":2,"endColumn":34},{"ruleId":"55","severity":1,"message":"67","line":2,"column":36,"nodeType":"57","messageId":"58","endLine":2,"endColumn":47},{"ruleId":"55","severity":1,"message":"68","line":2,"column":49,"nodeType":"57","messageId":"58","endLine":2,"endColumn":60},{"ruleId":"55","severity":1,"message":"69","line":7,"column":12,"nodeType":"57","messageId":"58","endLine":7,"endColumn":17},{"ruleId":"55","severity":1,"message":"70","line":8,"column":12,"nodeType":"57","messageId":"58","endLine":8,"endColumn":20},{"ruleId":"55","severity":1,"message":"71","line":12,"column":11,"nodeType":"57","messageId":"58","endLine":12,"endColumn":22},{"ruleId":"55","severity":1,"message":"72","line":16,"column":11,"nodeType":"57","messageId":"58","endLine":16,"endColumn":25},"@typescript-eslint/no-unused-vars","'IconType' is defined but never used.","Identifier","unusedVar","'NavbarText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["73"],"'Button' is defined but never used.","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'ModalHeader' is defined but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'handleEmail' is assigned a value but never used.","'handlePassword' is assigned a value but never used.",{"desc":"74","fix":"75"},"Update the dependencies array to be: [categories, dispatch, history, userInfo]",{"range":"76","text":"77"},[1400,1412],"[categories, dispatch, history, userInfo]"]